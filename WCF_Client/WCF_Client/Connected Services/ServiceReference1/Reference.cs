//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class Car : WCF_Client.ServiceReference1.Record {
        
        private string ColorField;
        
        private string MakeField;
        
        private string ModelField;
        
        private string VinField;
        
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Make {
            get {
                return this.MakeField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeField, value) != true)) {
                    this.MakeField = value;
                    this.RaisePropertyChanged("Make");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Vin {
            get {
                return this.VinField;
            }
            set {
                if ((object.ReferenceEquals(this.VinField, value) != true)) {
                    this.VinField = value;
                    this.RaisePropertyChanged("Vin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Record", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCF_Client.ServiceReference1.Car))]
    public partial class Record : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CarListDB", ReplyAction="http://tempuri.org/IService1/CarListDBResponse")]
        WCF_Client.ServiceReference1.Car[] CarListDB();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CarListDB", ReplyAction="http://tempuri.org/IService1/CarListDBResponse")]
        System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car[]> CarListDBAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CarPostDB", ReplyAction="http://tempuri.org/IService1/CarPostDBResponse")]
        string CarPostDB(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CarPostDB", ReplyAction="http://tempuri.org/IService1/CarPostDBResponse")]
        System.Threading.Tasks.Task<string> CarPostDBAsync(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarGet", ReplyAction="http://tempuri.org/IService1/OneCarGetResponse")]
        WCF_Client.ServiceReference1.Car OneCarGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarGet", ReplyAction="http://tempuri.org/IService1/OneCarGetResponse")]
        System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car> OneCarGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarGetCS", ReplyAction="http://tempuri.org/IService1/OneCarGetCSResponse")]
        WCF_Client.ServiceReference1.Car OneCarGetCS();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarGetCS", ReplyAction="http://tempuri.org/IService1/OneCarGetCSResponse")]
        System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car> OneCarGetCSAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPost", ReplyAction="http://tempuri.org/IService1/OneCarPostResponse")]
        WCF_Client.ServiceReference1.Car OneCarPost();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPost", ReplyAction="http://tempuri.org/IService1/OneCarPostResponse")]
        System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car> OneCarPostAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPostCS", ReplyAction="http://tempuri.org/IService1/OneCarPostCSResponse")]
        WCF_Client.ServiceReference1.Car OneCarPostCS();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPostCS", ReplyAction="http://tempuri.org/IService1/OneCarPostCSResponse")]
        System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car> OneCarPostCSAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CarList", ReplyAction="http://tempuri.org/IService1/CarListResponse")]
        WCF_Client.ServiceReference1.Car[] CarList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CarList", ReplyAction="http://tempuri.org/IService1/CarListResponse")]
        System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car[]> CarListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CarListCS", ReplyAction="http://tempuri.org/IService1/CarListCSResponse")]
        WCF_Client.ServiceReference1.Car[] CarListCS();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CarListCS", ReplyAction="http://tempuri.org/IService1/CarListCSResponse")]
        System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car[]> CarListCSAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarAddCS", ReplyAction="http://tempuri.org/IService1/OneCarAddCSResponse")]
        string OneCarAddCS(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarAddCS", ReplyAction="http://tempuri.org/IService1/OneCarAddCSResponse")]
        System.Threading.Tasks.Task<string> OneCarAddCSAsync(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarAdd", ReplyAction="http://tempuri.org/IService1/OneCarAddResponse")]
        string OneCarAdd(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarAdd", ReplyAction="http://tempuri.org/IService1/OneCarAddResponse")]
        System.Threading.Tasks.Task<string> OneCarAddAsync(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPutCS", ReplyAction="http://tempuri.org/IService1/OneCarPutCSResponse")]
        string OneCarPutCS(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPutCS", ReplyAction="http://tempuri.org/IService1/OneCarPutCSResponse")]
        System.Threading.Tasks.Task<string> OneCarPutCSAsync(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPut", ReplyAction="http://tempuri.org/IService1/OneCarPutResponse")]
        string OneCarPut(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPut", ReplyAction="http://tempuri.org/IService1/OneCarPutResponse")]
        System.Threading.Tasks.Task<string> OneCarPutAsync(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPatchCS", ReplyAction="http://tempuri.org/IService1/OneCarPatchCSResponse")]
        string OneCarPatchCS(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPatchCS", ReplyAction="http://tempuri.org/IService1/OneCarPatchCSResponse")]
        System.Threading.Tasks.Task<string> OneCarPatchCSAsync(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPatch", ReplyAction="http://tempuri.org/IService1/OneCarPatchResponse")]
        string OneCarPatch(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarPatch", ReplyAction="http://tempuri.org/IService1/OneCarPatchResponse")]
        System.Threading.Tasks.Task<string> OneCarPatchAsync(WCF_Client.ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarDeleteCS", ReplyAction="http://tempuri.org/IService1/OneCarDeleteCSResponse")]
        string OneCarDeleteCS(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarDeleteCS", ReplyAction="http://tempuri.org/IService1/OneCarDeleteCSResponse")]
        System.Threading.Tasks.Task<string> OneCarDeleteCSAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarDelete", ReplyAction="http://tempuri.org/IService1/OneCarDeleteResponse")]
        string OneCarDelete(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarDelete", ReplyAction="http://tempuri.org/IService1/OneCarDeleteResponse")]
        System.Threading.Tasks.Task<string> OneCarDeleteAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarDeleteID", ReplyAction="http://tempuri.org/IService1/OneCarDeleteIDResponse")]
        string OneCarDeleteID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OneCarDeleteID", ReplyAction="http://tempuri.org/IService1/OneCarDeleteIDResponse")]
        System.Threading.Tasks.Task<string> OneCarDeleteIDAsync(int ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WCF_Client.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WCF_Client.ServiceReference1.IService1>, WCF_Client.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCF_Client.ServiceReference1.Car[] CarListDB() {
            return base.Channel.CarListDB();
        }
        
        public System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car[]> CarListDBAsync() {
            return base.Channel.CarListDBAsync();
        }
        
        public string CarPostDB(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.CarPostDB(car);
        }
        
        public System.Threading.Tasks.Task<string> CarPostDBAsync(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.CarPostDBAsync(car);
        }
        
        public WCF_Client.ServiceReference1.Car OneCarGet() {
            return base.Channel.OneCarGet();
        }
        
        public System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car> OneCarGetAsync() {
            return base.Channel.OneCarGetAsync();
        }
        
        public WCF_Client.ServiceReference1.Car OneCarGetCS() {
            return base.Channel.OneCarGetCS();
        }
        
        public System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car> OneCarGetCSAsync() {
            return base.Channel.OneCarGetCSAsync();
        }
        
        public WCF_Client.ServiceReference1.Car OneCarPost() {
            return base.Channel.OneCarPost();
        }
        
        public System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car> OneCarPostAsync() {
            return base.Channel.OneCarPostAsync();
        }
        
        public WCF_Client.ServiceReference1.Car OneCarPostCS() {
            return base.Channel.OneCarPostCS();
        }
        
        public System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car> OneCarPostCSAsync() {
            return base.Channel.OneCarPostCSAsync();
        }
        
        public WCF_Client.ServiceReference1.Car[] CarList() {
            return base.Channel.CarList();
        }
        
        public System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car[]> CarListAsync() {
            return base.Channel.CarListAsync();
        }
        
        public WCF_Client.ServiceReference1.Car[] CarListCS() {
            return base.Channel.CarListCS();
        }
        
        public System.Threading.Tasks.Task<WCF_Client.ServiceReference1.Car[]> CarListCSAsync() {
            return base.Channel.CarListCSAsync();
        }
        
        public string OneCarAddCS(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarAddCS(car);
        }
        
        public System.Threading.Tasks.Task<string> OneCarAddCSAsync(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarAddCSAsync(car);
        }
        
        public string OneCarAdd(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarAdd(car);
        }
        
        public System.Threading.Tasks.Task<string> OneCarAddAsync(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarAddAsync(car);
        }
        
        public string OneCarPutCS(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarPutCS(car);
        }
        
        public System.Threading.Tasks.Task<string> OneCarPutCSAsync(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarPutCSAsync(car);
        }
        
        public string OneCarPut(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarPut(car);
        }
        
        public System.Threading.Tasks.Task<string> OneCarPutAsync(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarPutAsync(car);
        }
        
        public string OneCarPatchCS(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarPatchCS(car);
        }
        
        public System.Threading.Tasks.Task<string> OneCarPatchCSAsync(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarPatchCSAsync(car);
        }
        
        public string OneCarPatch(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarPatch(car);
        }
        
        public System.Threading.Tasks.Task<string> OneCarPatchAsync(WCF_Client.ServiceReference1.Car car) {
            return base.Channel.OneCarPatchAsync(car);
        }
        
        public string OneCarDeleteCS(int ID) {
            return base.Channel.OneCarDeleteCS(ID);
        }
        
        public System.Threading.Tasks.Task<string> OneCarDeleteCSAsync(int ID) {
            return base.Channel.OneCarDeleteCSAsync(ID);
        }
        
        public string OneCarDelete(int ID) {
            return base.Channel.OneCarDelete(ID);
        }
        
        public System.Threading.Tasks.Task<string> OneCarDeleteAsync(int ID) {
            return base.Channel.OneCarDeleteAsync(ID);
        }
        
        public string OneCarDeleteID(int ID) {
            return base.Channel.OneCarDeleteID(ID);
        }
        
        public System.Threading.Tasks.Task<string> OneCarDeleteIDAsync(int ID) {
            return base.Channel.OneCarDeleteIDAsync(ID);
        }
    }
}
